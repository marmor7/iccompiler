
######################
# Program arrays.ic
######################

######################
# STRING LITERALS
arr_neg_alloc_size: "Negative or zero array size allocation. Program will no exit. "
null_reference: "Null reference. Program will no exit. "
illegal_arr_loc: "Illegal array location. Program will no exit. "
dev_by_zero: "Devision by zero. Program will no exit. "
str0: ""
######################

######################
# DISPATCH VECTORS
_DV_B: [_B_foo]
_DV_A: [_A_bar]
######################

_B_foo:   # Method foo:
# Line 5: 
Move this, R1
Move 2, R2
Move 4, R3
Mul R3,R2
Compare 0,R2
JumpLE _arr_neg_alloc_size
Library __allocateArray(R2),R4
# TMP 1
# new smartMove on: R4, R1.1
MoveField R1.1,R5 # SMART MOVED BITCH - field style
MoveField R5,R1.1 # brought to you by safe/smartmove
Move R4, R5 # brought to you by safe/smartmove
# Line 6: 
Move this, R6
Move 0, R7
Move 0, R10
# TMP 4
# new smartMove on: R6.1, R11
MoveField R6.1,R12 # SMART MOVED BITCH - field style
Move R12, R11 # brought to you by safe/smartmove
ArrayLength R11,R9		# Getting array length
Compare R7,R9
JumpL _illegal_arr_loc
Compare R7,R10
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R6.1[R7], R8
MoveField R6.1,R14 # SMART MOVED BITCH - field style
MoveArray R14[R7], R13 # SMART MOVED BITCH - Array Style
Move R8, R8 # brought to you by safe/smartmove
Move R13, R8 # brought to you by safe/smartmove
Move 2, R15
Move 4, R16
Mul R16,R15
Compare 0,R15
JumpLE _arr_neg_alloc_size
Library __allocateArray(R15),R17
# TMP 1
# new smartMove on: R17, R6.1[R7]
MoveField R6.1,R19 # SMART MOVED BITCH - field style
MoveArray R19[R7], R18 # SMART MOVED BITCH - Array Style
Move R17, R18 # brought to you by safe/smartmove
# Line 7: 
Move this, R20
Move 1, R21
Move 0, R24
# TMP 4
# new smartMove on: R20.1, R25
MoveField R20.1,R26 # SMART MOVED BITCH - field style
Move R26, R25 # brought to you by safe/smartmove
ArrayLength R25,R23		# Getting array length
Compare R21,R23
JumpL _illegal_arr_loc
Compare R21,R24
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R20.1[R21], R22
MoveField R20.1,R28 # SMART MOVED BITCH - field style
MoveArray R28[R21], R27 # SMART MOVED BITCH - Array Style
Move R22, R22 # brought to you by safe/smartmove
Move R27, R22 # brought to you by safe/smartmove
Move 2, R29
Move 4, R30
Mul R30,R29
Compare 0,R29
JumpLE _arr_neg_alloc_size
Library __allocateArray(R29),R31
# TMP 1
# new smartMove on: R31, R20.1[R21]
MoveField R20.1,R33 # SMART MOVED BITCH - field style
MoveArray R33[R21], R32 # SMART MOVED BITCH - Array Style
Move R31, R32 # brought to you by safe/smartmove
Return 9999
_A_bar:   # Method bar:
# Line 17: 
Move this, R34
Move 4, R35
Move 4, R36
Mul R36,R35
Compare 0,R35
JumpLE _arr_neg_alloc_size
Library __allocateArray(R35),R37
# TMP 1
# new smartMove on: R37, R34.1
MoveField R34.1,R38 # SMART MOVED BITCH - field style
MoveField R38,R34.1 # brought to you by safe/smartmove
Move R37, R38 # brought to you by safe/smartmove
# Line 18: 
Library __allocateObject(8),R39 # Allocation of B
MoveField _DV_B,R39.0 # Move field for DV pointer
Move R39, b_A_19
# Line 19: 
Move b_A_19, R41
VirtualCall R41.0(),R41
# Line 20: 
Move 0, R43
Move 0, R46
# TMP 4
# new smartMove on: b_A_19.1, R47
Move b_A_19, R49 # brought to you by safe/smartmove
MoveField R49.1,R48 # SMART MOVED BITCH - field style
Move R48, R47 # brought to you by safe/smartmove
ArrayLength R47,R45		# Getting array length
Compare R43,R45
JumpL _illegal_arr_loc
Compare R43,R46
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: b_A_19.1[R43], R44
Move b_A_19, R52 # brought to you by safe/smartmove
MoveField R52.1,R51 # SMART MOVED BITCH - field style
MoveArray R51[R43], R50 # SMART MOVED BITCH - Array Style
Move R44, R44 # brought to you by safe/smartmove
Move R50, R44 # brought to you by safe/smartmove
Move 0, R53
Move 0, R56
# TMP 4
# new smartMove on: R44, R57
Move R44, R57 # brought to you by safe/smartmove
ArrayLength R57,R55		# Getting array length
Compare R53,R55
JumpL _illegal_arr_loc
Compare R53,R56
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R44[R53], R54
MoveArray R44[R53], R58 # SMART MOVED BITCH - Array Style
Move R54, R54 # brought to you by safe/smartmove
Move R58, R54 # brought to you by safe/smartmove
Move 0, R59
# TMP 1
# new smartMove on: R59, R44[R53]
MoveArray R44[R53], R60 # SMART MOVED BITCH - Array Style
MoveArray R60, R44[R53] # brought to you by safe/smartmove
Move R59, R60 # brought to you by safe/smartmove
# Line 21: 
Move 0, R62
Move 0, R65
# TMP 4
# new smartMove on: b_A_19.1, R66
Move b_A_19, R68 # brought to you by safe/smartmove
MoveField R68.1,R67 # SMART MOVED BITCH - field style
Move R67, R66 # brought to you by safe/smartmove
ArrayLength R66,R64		# Getting array length
Compare R62,R64
JumpL _illegal_arr_loc
Compare R62,R65
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: b_A_19.1[R62], R63
Move b_A_19, R71 # brought to you by safe/smartmove
MoveField R71.1,R70 # SMART MOVED BITCH - field style
MoveArray R70[R62], R69 # SMART MOVED BITCH - Array Style
Move R63, R63 # brought to you by safe/smartmove
Move R69, R63 # brought to you by safe/smartmove
Move 1, R72
Move 0, R75
# TMP 4
# new smartMove on: R63, R76
Move R63, R76 # brought to you by safe/smartmove
ArrayLength R76,R74		# Getting array length
Compare R72,R74
JumpL _illegal_arr_loc
Compare R72,R75
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R63[R72], R73
MoveArray R63[R72], R77 # SMART MOVED BITCH - Array Style
Move R73, R73 # brought to you by safe/smartmove
Move R77, R73 # brought to you by safe/smartmove
Move 1, R78
# TMP 1
# new smartMove on: R78, R63[R72]
MoveArray R63[R72], R79 # SMART MOVED BITCH - Array Style
MoveArray R79, R63[R72] # brought to you by safe/smartmove
Move R78, R79 # brought to you by safe/smartmove
# Line 22: 
Move 1, R81
Move 0, R84
# TMP 4
# new smartMove on: b_A_19.1, R85
Move b_A_19, R87 # brought to you by safe/smartmove
MoveField R87.1,R86 # SMART MOVED BITCH - field style
Move R86, R85 # brought to you by safe/smartmove
ArrayLength R85,R83		# Getting array length
Compare R81,R83
JumpL _illegal_arr_loc
Compare R81,R84
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: b_A_19.1[R81], R82
Move b_A_19, R90 # brought to you by safe/smartmove
MoveField R90.1,R89 # SMART MOVED BITCH - field style
MoveArray R89[R81], R88 # SMART MOVED BITCH - Array Style
Move R82, R82 # brought to you by safe/smartmove
Move R88, R82 # brought to you by safe/smartmove
Move 0, R91
Move 0, R94
# TMP 4
# new smartMove on: R82, R95
Move R82, R95 # brought to you by safe/smartmove
ArrayLength R95,R93		# Getting array length
Compare R91,R93
JumpL _illegal_arr_loc
Compare R91,R94
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R82[R91], R92
MoveArray R82[R91], R96 # SMART MOVED BITCH - Array Style
Move R92, R92 # brought to you by safe/smartmove
Move R96, R92 # brought to you by safe/smartmove
Move 2, R97
# TMP 1
# new smartMove on: R97, R82[R91]
MoveArray R82[R91], R98 # SMART MOVED BITCH - Array Style
MoveArray R98, R82[R91] # brought to you by safe/smartmove
Move R97, R98 # brought to you by safe/smartmove
# Line 23: 
Move 1, R100
Move 0, R103
# TMP 4
# new smartMove on: b_A_19.1, R104
Move b_A_19, R106 # brought to you by safe/smartmove
MoveField R106.1,R105 # SMART MOVED BITCH - field style
Move R105, R104 # brought to you by safe/smartmove
ArrayLength R104,R102		# Getting array length
Compare R100,R102
JumpL _illegal_arr_loc
Compare R100,R103
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: b_A_19.1[R100], R101
Move b_A_19, R109 # brought to you by safe/smartmove
MoveField R109.1,R108 # SMART MOVED BITCH - field style
MoveArray R108[R100], R107 # SMART MOVED BITCH - Array Style
Move R101, R101 # brought to you by safe/smartmove
Move R107, R101 # brought to you by safe/smartmove
Move 1, R110
Move 0, R113
# TMP 4
# new smartMove on: R101, R114
Move R101, R114 # brought to you by safe/smartmove
ArrayLength R114,R112		# Getting array length
Compare R110,R112
JumpL _illegal_arr_loc
Compare R110,R113
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R101[R110], R111
MoveArray R101[R110], R115 # SMART MOVED BITCH - Array Style
Move R111, R111 # brought to you by safe/smartmove
Move R115, R111 # brought to you by safe/smartmove
Move 3, R116
# TMP 1
# new smartMove on: R116, R101[R110]
MoveArray R101[R110], R117 # SMART MOVED BITCH - Array Style
MoveArray R117, R101[R110] # brought to you by safe/smartmove
Move R116, R117 # brought to you by safe/smartmove
# Line 24: 
Move this, R118
Compare 0,R118
JumpTrue _null_reference
MoveField R118.1,R119 # ### 1
Move 0, R120
Move 0, R123
# TMP 4
# new smartMove on: R119, R124
Move R119, R124 # brought to you by safe/smartmove
ArrayLength R124,R122		# Getting array length
Compare R120,R122
JumpL _illegal_arr_loc
Compare R120,R123
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R119[R120], R121
MoveArray R119[R120], R125 # SMART MOVED BITCH - Array Style
Move R121, R121 # brought to you by safe/smartmove
Move R125, R121 # brought to you by safe/smartmove
Move b_A_19, R126
Move 0, R127
Move 0, R130
# TMP 4
# new smartMove on: R126.1, R131
MoveField R126.1,R132 # SMART MOVED BITCH - field style
Move R132, R131 # brought to you by safe/smartmove
ArrayLength R131,R129		# Getting array length
Compare R127,R129
JumpL _illegal_arr_loc
Compare R127,R130
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R126.1[R127], R128
MoveField R126.1,R134 # SMART MOVED BITCH - field style
MoveArray R134[R127], R133 # SMART MOVED BITCH - Array Style
Move R128, R128 # brought to you by safe/smartmove
Move R133, R128 # brought to you by safe/smartmove
Move 0, R135
Move 0, R138
# TMP 4
# new smartMove on: R128, R139
Move R128, R139 # brought to you by safe/smartmove
ArrayLength R139,R137		# Getting array length
Compare R135,R137
JumpL _illegal_arr_loc
Compare R135,R138
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R128[R135], R136
MoveArray R128[R135], R140 # SMART MOVED BITCH - Array Style
Move R136, R136 # brought to you by safe/smartmove
Move R140, R136 # brought to you by safe/smartmove
# TMP 1
# new smartMove on: R136, R119[R120]
MoveArray R119[R120], R141 # SMART MOVED BITCH - Array Style
MoveArray R141, R119[R120] # brought to you by safe/smartmove
Move R136, R141 # brought to you by safe/smartmove
# Line 25: 
Move this, R142
Compare 0,R142
JumpTrue _null_reference
MoveField R142.1,R143 # ### 1
Move 1, R144
Move 0, R147
# TMP 4
# new smartMove on: R143, R148
Move R143, R148 # brought to you by safe/smartmove
ArrayLength R148,R146		# Getting array length
Compare R144,R146
JumpL _illegal_arr_loc
Compare R144,R147
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R143[R144], R145
MoveArray R143[R144], R149 # SMART MOVED BITCH - Array Style
Move R145, R145 # brought to you by safe/smartmove
Move R149, R145 # brought to you by safe/smartmove
Move b_A_19, R150
Move 0, R151
Move 0, R154
# TMP 4
# new smartMove on: R150.1, R155
MoveField R150.1,R156 # SMART MOVED BITCH - field style
Move R156, R155 # brought to you by safe/smartmove
ArrayLength R155,R153		# Getting array length
Compare R151,R153
JumpL _illegal_arr_loc
Compare R151,R154
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R150.1[R151], R152
MoveField R150.1,R158 # SMART MOVED BITCH - field style
MoveArray R158[R151], R157 # SMART MOVED BITCH - Array Style
Move R152, R152 # brought to you by safe/smartmove
Move R157, R152 # brought to you by safe/smartmove
Move 1, R159
Move 0, R162
# TMP 4
# new smartMove on: R152, R163
Move R152, R163 # brought to you by safe/smartmove
ArrayLength R163,R161		# Getting array length
Compare R159,R161
JumpL _illegal_arr_loc
Compare R159,R162
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R152[R159], R160
MoveArray R152[R159], R164 # SMART MOVED BITCH - Array Style
Move R160, R160 # brought to you by safe/smartmove
Move R164, R160 # brought to you by safe/smartmove
# TMP 1
# new smartMove on: R160, R143[R144]
MoveArray R143[R144], R165 # SMART MOVED BITCH - Array Style
MoveArray R165, R143[R144] # brought to you by safe/smartmove
Move R160, R165 # brought to you by safe/smartmove
# Line 26: 
Move this, R166
Compare 0,R166
JumpTrue _null_reference
MoveField R166.1,R167 # ### 1
Move 2, R168
Move 0, R171
# TMP 4
# new smartMove on: R167, R172
Move R167, R172 # brought to you by safe/smartmove
ArrayLength R172,R170		# Getting array length
Compare R168,R170
JumpL _illegal_arr_loc
Compare R168,R171
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R167[R168], R169
MoveArray R167[R168], R173 # SMART MOVED BITCH - Array Style
Move R169, R169 # brought to you by safe/smartmove
Move R173, R169 # brought to you by safe/smartmove
Move b_A_19, R174
Move 1, R175
Move 0, R178
# TMP 4
# new smartMove on: R174.1, R179
MoveField R174.1,R180 # SMART MOVED BITCH - field style
Move R180, R179 # brought to you by safe/smartmove
ArrayLength R179,R177		# Getting array length
Compare R175,R177
JumpL _illegal_arr_loc
Compare R175,R178
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R174.1[R175], R176
MoveField R174.1,R182 # SMART MOVED BITCH - field style
MoveArray R182[R175], R181 # SMART MOVED BITCH - Array Style
Move R176, R176 # brought to you by safe/smartmove
Move R181, R176 # brought to you by safe/smartmove
Move 0, R183
Move 0, R186
# TMP 4
# new smartMove on: R176, R187
Move R176, R187 # brought to you by safe/smartmove
ArrayLength R187,R185		# Getting array length
Compare R183,R185
JumpL _illegal_arr_loc
Compare R183,R186
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R176[R183], R184
MoveArray R176[R183], R188 # SMART MOVED BITCH - Array Style
Move R184, R184 # brought to you by safe/smartmove
Move R188, R184 # brought to you by safe/smartmove
# TMP 1
# new smartMove on: R184, R167[R168]
MoveArray R167[R168], R189 # SMART MOVED BITCH - Array Style
MoveArray R189, R167[R168] # brought to you by safe/smartmove
Move R184, R189 # brought to you by safe/smartmove
# Line 27: 
Move this, R190
Compare 0,R190
JumpTrue _null_reference
MoveField R190.1,R191 # ### 1
Move 3, R192
Move 0, R195
# TMP 4
# new smartMove on: R191, R196
Move R191, R196 # brought to you by safe/smartmove
ArrayLength R196,R194		# Getting array length
Compare R192,R194
JumpL _illegal_arr_loc
Compare R192,R195
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R191[R192], R193
MoveArray R191[R192], R197 # SMART MOVED BITCH - Array Style
Move R193, R193 # brought to you by safe/smartmove
Move R197, R193 # brought to you by safe/smartmove
Move b_A_19, R198
Move 1, R199
Move 0, R202
# TMP 4
# new smartMove on: R198.1, R203
MoveField R198.1,R204 # SMART MOVED BITCH - field style
Move R204, R203 # brought to you by safe/smartmove
ArrayLength R203,R201		# Getting array length
Compare R199,R201
JumpL _illegal_arr_loc
Compare R199,R202
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R198.1[R199], R200
MoveField R198.1,R206 # SMART MOVED BITCH - field style
MoveArray R206[R199], R205 # SMART MOVED BITCH - Array Style
Move R200, R200 # brought to you by safe/smartmove
Move R205, R200 # brought to you by safe/smartmove
Move 1, R207
Move 0, R210
# TMP 4
# new smartMove on: R200, R211
Move R200, R211 # brought to you by safe/smartmove
ArrayLength R211,R209		# Getting array length
Compare R207,R209
JumpL _illegal_arr_loc
Compare R207,R210
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R200[R207], R208
MoveArray R200[R207], R212 # SMART MOVED BITCH - Array Style
Move R208, R208 # brought to you by safe/smartmove
Move R212, R208 # brought to you by safe/smartmove
# TMP 1
# new smartMove on: R208, R191[R192]
MoveArray R191[R192], R213 # SMART MOVED BITCH - Array Style
MoveArray R213, R191[R192] # brought to you by safe/smartmove
Move R208, R213 # brought to you by safe/smartmove
# Line 28: 
Move this, R214
Compare 0,R214
JumpTrue _null_reference
MoveField R214.1,R215 # ### 1
Move 0, R216
Move 0, R219
# TMP 4
# new smartMove on: R215, R220
Move R215, R220 # brought to you by safe/smartmove
ArrayLength R220,R218		# Getting array length
Compare R216,R218
JumpL _illegal_arr_loc
Compare R216,R219
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R215[R216], R217
MoveArray R215[R216], R221 # SMART MOVED BITCH - Array Style
Move R217, R217 # brought to you by safe/smartmove
Move R221, R217 # brought to you by safe/smartmove
Library __printi(R217),R222
# Line 29: 
Move str0, R223 # assigning literal to reg
Library __println(R223),R224
# Line 30: 
Move this, R225
Compare 0,R225
JumpTrue _null_reference
MoveField R225.1,R226 # ### 1
Move 1, R227
Move 0, R230
# TMP 4
# new smartMove on: R226, R231
Move R226, R231 # brought to you by safe/smartmove
ArrayLength R231,R229		# Getting array length
Compare R227,R229
JumpL _illegal_arr_loc
Compare R227,R230
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R226[R227], R228
MoveArray R226[R227], R232 # SMART MOVED BITCH - Array Style
Move R228, R228 # brought to you by safe/smartmove
Move R232, R228 # brought to you by safe/smartmove
Library __printi(R228),R233
# Line 31: 
Move str0, R234 # assigning literal to reg
Library __println(R234),R235
# Line 32: 
Move this, R236
Compare 0,R236
JumpTrue _null_reference
MoveField R236.1,R237 # ### 1
Move 2, R238
Move 0, R241
# TMP 4
# new smartMove on: R237, R242
Move R237, R242 # brought to you by safe/smartmove
ArrayLength R242,R240		# Getting array length
Compare R238,R240
JumpL _illegal_arr_loc
Compare R238,R241
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R237[R238], R239
MoveArray R237[R238], R243 # SMART MOVED BITCH - Array Style
Move R239, R239 # brought to you by safe/smartmove
Move R243, R239 # brought to you by safe/smartmove
Library __printi(R239),R244
# Line 33: 
Move str0, R245 # assigning literal to reg
Library __println(R245),R246
# Line 34: 
Move this, R247
Compare 0,R247
JumpTrue _null_reference
MoveField R247.1,R248 # ### 1
Move 3, R249
Move 0, R252
# TMP 4
# new smartMove on: R248, R253
Move R248, R253 # brought to you by safe/smartmove
ArrayLength R253,R251		# Getting array length
Compare R249,R251
JumpL _illegal_arr_loc
Compare R249,R252
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R248[R249], R250
MoveArray R248[R249], R254 # SMART MOVED BITCH - Array Style
Move R250, R250 # brought to you by safe/smartmove
Move R254, R250 # brought to you by safe/smartmove
Library __printi(R250),R255
# Line 35: 
Move str0, R256 # assigning literal to reg
Library __println(R256),R257
# Line 36: 
Move b_A_19, R258
# TMP 3
# new smartMove on: R258.1, R259
MoveField R258.1,R260 # SMART MOVED BITCH - field style
Move R260, R259 # brought to you by safe/smartmove
Library __printi(R259),R261
# Line 37: 
Move str0, R262 # assigning literal to reg
Library __println(R262),R263
# Line 38: 
Move this, R264
Compare 0,R264
JumpTrue _null_reference
MoveField R264.1,R265 # ### 1
# TMP 3
# new smartMove on: R265, R266
Move R265, R266 # brought to you by safe/smartmove
Library __printi(R266),R267
# Line 39: 
Move str0, R268 # assigning literal to reg
Library __println(R268),R269
# Line 40: 
Move b_A_19, R270
Move 0, R271
Move 0, R274
# TMP 4
# new smartMove on: R270.1, R275
MoveField R270.1,R276 # SMART MOVED BITCH - field style
Move R276, R275 # brought to you by safe/smartmove
ArrayLength R275,R273		# Getting array length
Compare R271,R273
JumpL _illegal_arr_loc
Compare R271,R274
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R270.1[R271], R272
MoveField R270.1,R278 # SMART MOVED BITCH - field style
MoveArray R278[R271], R277 # SMART MOVED BITCH - Array Style
Move R272, R272 # brought to you by safe/smartmove
Move R277, R272 # brought to you by safe/smartmove
# TMP 3
# new smartMove on: R272, R279
Move R272, R279 # brought to you by safe/smartmove
Library __printi(R279),R280
# Line 41: 
Move str0, R281 # assigning literal to reg
Library __println(R281),R282
# Line 42: 
Move b_A_19, R283
Move 1, R284
Move 0, R287
# TMP 4
# new smartMove on: R283.1, R288
MoveField R283.1,R289 # SMART MOVED BITCH - field style
Move R289, R288 # brought to you by safe/smartmove
ArrayLength R288,R286		# Getting array length
Compare R284,R286
JumpL _illegal_arr_loc
Compare R284,R287
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R283.1[R284], R285
MoveField R283.1,R291 # SMART MOVED BITCH - field style
MoveArray R291[R284], R290 # SMART MOVED BITCH - Array Style
Move R285, R285 # brought to you by safe/smartmove
Move R290, R285 # brought to you by safe/smartmove
# TMP 3
# new smartMove on: R285, R292
Move R285, R292 # brought to you by safe/smartmove
Library __printi(R292),R293
Return 9999
_ic_main:   # Main Method
# Line 46: 
Library __allocateObject(8),R294 # Allocation of A
MoveField _DV_A,R294.0 # Move field for DV pointer
Move R294, a_A_20
# Line 50: 
Move 0, R295
Move R295, g_A_20
# Line 51: 
Move g_A_20, R297
Move a_A_20, R298
VirtualCall R298.0(y=R297),R298
# Line 52: 
Move 3, R299
Move 4, R300
Mul R300,R299
Compare 0,R299
JumpLE _arr_neg_alloc_size
Library __allocateArray(R299),R301
Move R301, a_array_A_20
# Line 53: 
Move 0, R303
Move 0, R306
# TMP 4
# new smartMove on: a_array_A_20, R307
Move a_array_A_20, R308 # brought to you by safe/smartmove
Move R308, R307 # brought to you by safe/smartmove
ArrayLength R307,R305		# Getting array length
Compare R303,R305
JumpL _illegal_arr_loc
Compare R303,R306
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: a_array_A_20[R303], R304
Move a_array_A_20, R310 # brought to you by safe/smartmove
MoveArray R310[R303], R309 # SMART MOVED BITCH - Array Style
Move R304, R304 # brought to you by safe/smartmove
Move R309, R304 # brought to you by safe/smartmove
Library __allocateObject(8),R311 # Allocation of A
MoveField _DV_A,R311.0 # Move field for DV pointer
# TMP 1
# new smartMove on: R311, a_array_A_20[R303]
Move a_array_A_20, R313 # brought to you by safe/smartmove
MoveArray R313[R303], R312 # SMART MOVED BITCH - Array Style
Move R311, R312 # brought to you by safe/smartmove
# Line 54: 
Move 1, R315
Move 0, R318
# TMP 4
# new smartMove on: a_array_A_20, R319
Move a_array_A_20, R320 # brought to you by safe/smartmove
Move R320, R319 # brought to you by safe/smartmove
ArrayLength R319,R317		# Getting array length
Compare R315,R317
JumpL _illegal_arr_loc
Compare R315,R318
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: a_array_A_20[R315], R316
Move a_array_A_20, R322 # brought to you by safe/smartmove
MoveArray R322[R315], R321 # SMART MOVED BITCH - Array Style
Move R316, R316 # brought to you by safe/smartmove
Move R321, R316 # brought to you by safe/smartmove
Library __allocateObject(8),R323 # Allocation of A
MoveField _DV_A,R323.0 # Move field for DV pointer
# TMP 1
# new smartMove on: R323, a_array_A_20[R315]
Move a_array_A_20, R325 # brought to you by safe/smartmove
MoveArray R325[R315], R324 # SMART MOVED BITCH - Array Style
Move R323, R324 # brought to you by safe/smartmove
# Line 55: 
Move 2, R327
Move 0, R330
# TMP 4
# new smartMove on: a_array_A_20, R331
Move a_array_A_20, R332 # brought to you by safe/smartmove
Move R332, R331 # brought to you by safe/smartmove
ArrayLength R331,R329		# Getting array length
Compare R327,R329
JumpL _illegal_arr_loc
Compare R327,R330
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: a_array_A_20[R327], R328
Move a_array_A_20, R334 # brought to you by safe/smartmove
MoveArray R334[R327], R333 # SMART MOVED BITCH - Array Style
Move R328, R328 # brought to you by safe/smartmove
Move R333, R328 # brought to you by safe/smartmove
Library __allocateObject(8),R335 # Allocation of A
MoveField _DV_A,R335.0 # Move field for DV pointer
# TMP 1
# new smartMove on: R335, a_array_A_20[R327]
Move a_array_A_20, R337 # brought to you by safe/smartmove
MoveArray R337[R327], R336 # SMART MOVED BITCH - Array Style
Move R335, R336 # brought to you by safe/smartmove
# Line 56: 
Move 0, R338
Move R338, i_A_20
# Line 57: 
_l1:   # While
Move i_A_20, R339
Move 3, R340
Move 0, R341
Compare R340,R339
JumpGE _l3
Move 1, R341
_l3:
Compare 0,R341		# While condition check
JumpTrue _l2		# Conditional jump when while statement is false
# Line 57: 
Move g_A_20, R343
Move a_array_A_20, R344
Move i_A_20, R345
Move 0, R348
# TMP 4
# new smartMove on: R344, R349
Move R344, R349 # brought to you by safe/smartmove
ArrayLength R349,R347		# Getting array length
Compare R345,R347
JumpL _illegal_arr_loc
Compare R345,R348
JumpG _illegal_arr_loc
# TMP 2
# new smartMove on: R344[R345], R346
MoveArray R344[R345], R350 # SMART MOVED BITCH - Array Style
Move R346, R346 # brought to you by safe/smartmove
Move R350, R346 # brought to you by safe/smartmove
VirtualCall R346.0(y=R343),R346
Move i_A_20, R352
Move 1, R353
Add R353,R352
# TMP 1
# new smartMove on: R352, i_A_20
Move i_A_20, R354 # brought to you by safe/smartmove
Move R354, i_A_20 # brought to you by safe/smartmove
Move R352, R354 # brought to you by safe/smartmove
Jump _l1
_l2:   # False while condition
Library __exit(0),Rdummy
# Method main end
Return 9999

######################
# Error Labels
######################

_null_reference:
Library __println(null_reference),Rdummy
Library __exit(1),Rdummy

_illegal_arr_loc:
Library __println(illegal_arr_loc),Rdummy
Library __exit(1),Rdummy

_dev_by_zero:
Library __println(dev_by_zero),Rdummy
Library __exit(1),Rdummy

_arr_neg_alloc_size:
Library __println(arr_neg_alloc_size),Rdummy
Library __exit(1),Rdummy

