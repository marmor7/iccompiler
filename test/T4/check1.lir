
######################
# Program ~check1.ic
######################

######################
# STRING LITERALS
arr_neg_alloc_size: "Negative or zero array size allocation. Program will no exit. "
null_reference: "Null reference. Program will no exit. "
illegal_arr_loc: "Illegal array location. Program will no exit. "
dev_by_zero: "Devision by zero. Program will no exit. "
str0: ""
######################

######################
# DISPATCH VECTORS
_DV_T: []
######################

_ic_main:   # Main Method
# Line 4: 
# Line 5: 
# Line 6: 
# Line 7: 
# Line 8: 
Move 2, R1
# new smartMove on: R1, a1_T_17
Move R1, a1_T_17 # brought to you by safe/smartmove
# Line 9: 
Move 0, R1
# new smartMove on: R1, a2_T_17
Move R1, a2_T_17 # brought to you by safe/smartmove
# Line 10: 
Move 0, R1
# new smartMove on: R1, a3_T_17
Move R1, a3_T_17 # brought to you by safe/smartmove
# Line 11: 
Move 0, R1
# new smartMove on: R1, a4_T_17
Move R1, a4_T_17 # brought to you by safe/smartmove
# Line 12: 
Move 5, R1
# new smartMove on: 4, R2
Move 4, R3 # brought to you by safe/smartmove
Move R3, R2 # brought to you by safe/smartmove
Mul R2,R1
Compare 0,R1
JumpLE _arr_neg_alloc_size
Library __allocateArray(R1),R4
# new smartMove on: R4, a_T_17
Move R4, a_T_17 # brought to you by safe/smartmove
# Line 13: 
Move 1, R2
# TMP 1
# new smartMove on: R2, b1_T_17
Move R2, b1_T_17 # brought to you by safe/smartmove
# Line 14: 
# new smartMove on: b1_T_17, R2
Move b1_T_17, R3 # brought to you by safe/smartmove
Move R3, R2 # brought to you by safe/smartmove
Move R3, b1_T_17 # reversed
# TMP 1
# new smartMove on: R2, b2_T_17
Move R2, b2_T_17 # brought to you by safe/smartmove
# Line 15: 
# new smartMove on: b2_T_17, R2
Move b2_T_17, R3 # brought to you by safe/smartmove
Move R3, R2 # brought to you by safe/smartmove
Move R3, b2_T_17 # reversed
Xor 1,R2
Xor 1,R2
Xor 1,R2
# TMP 1
# new smartMove on: R2, b3_T_17
Move R2, b3_T_17 # brought to you by safe/smartmove
# Line 16: 
# new smartMove on: b1_T_17, R2
Move b1_T_17, R3 # brought to you by safe/smartmove
Move R3, R2 # brought to you by safe/smartmove
Move R3, b1_T_17 # reversed
# new smartMove on: b2_T_17, R4
Move b2_T_17, R5 # brought to you by safe/smartmove
Move R5, R4 # brought to you by safe/smartmove
Move R5, b2_T_17 # reversed
# new smartMove on: b3_T_17, R6
Move b3_T_17, R7 # brought to you by safe/smartmove
Move R7, R6 # brought to you by safe/smartmove
Move R7, b3_T_17 # reversed
# new smartMove on: R4, R8
Move R4, R8 # brought to you by safe/smartmove
# new smartMove on: R6, R9
Move R6, R9 # brought to you by safe/smartmove
# new smartMove on: 0, R10
Move 0, R11 # brought to you by safe/smartmove
Move R11, R10 # brought to you by safe/smartmove
And R8,R9
# new smartMove on: R2, R12
Move R2, R12 # brought to you by safe/smartmove
# new smartMove on: R9, R13
Move R9, R13 # brought to you by safe/smartmove
# new smartMove on: 0, R14
Move 0, R15 # brought to you by safe/smartmove
Move R15, R14 # brought to you by safe/smartmove
Or R12,R13
# TMP 1
# new smartMove on: R13, b4_T_17
Move R13, b4_T_17 # brought to you by safe/smartmove
# Line 20: 
# new smartMove on: a2_T_17, R2
Move a2_T_17, R3 # brought to you by safe/smartmove
Move R3, R2 # brought to you by safe/smartmove
Move R3, a2_T_17 # reversed
# new smartMove on: a1_T_17, R4
Move a1_T_17, R5 # brought to you by safe/smartmove
Move R5, R4 # brought to you by safe/smartmove
Move R5, a1_T_17 # reversed
# new smartMove on: R2, R6
Move R2, R6 # brought to you by safe/smartmove
# new smartMove on: R4, R7
Move R4, R7 # brought to you by safe/smartmove
Compare 0,R7
JumpTrue _dev_by_zero
Div R7,R6
Neg R6
# TMP 1
# new smartMove on: R6, a3_T_17
Move R6, a3_T_17 # brought to you by safe/smartmove
# Line 21: 
Move 6, R2
Move 3, R3
# new smartMove on: R2, R4
Move R2, R4 # brought to you by safe/smartmove
# new smartMove on: R3, R5
Move R3, R5 # brought to you by safe/smartmove
Mod R5,R4
# TMP 1
# new smartMove on: R4, a4_T_17
Move R4, a4_T_17 # brought to you by safe/smartmove
# Line 23: 
# new smartMove on: b1_T_17, R1
Move b1_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, b1_T_17 # reversed
Library __printb(R1),R3
# Line 24: 
Move str0, R1 # assigning literal to reg
Library __println(R1),R2
# Line 25: 
# new smartMove on: b2_T_17, R1
Move b2_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, b2_T_17 # reversed
Library __printb(R1),R3
# Line 26: 
Move str0, R1 # assigning literal to reg
Library __println(R1),R2
# Line 27: 
# new smartMove on: b3_T_17, R1
Move b3_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, b3_T_17 # reversed
Library __printb(R1),R3
# Line 28: 
Move str0, R1 # assigning literal to reg
Library __println(R1),R2
# Line 29: 
# new smartMove on: b4_T_17, R1
Move b4_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, b4_T_17 # reversed
Library __printb(R1),R3
# Line 30: 
Move str0, R1 # assigning literal to reg
Library __println(R1),R2
# Line 31: 
# new smartMove on: a1_T_17, R1
Move a1_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, a1_T_17 # reversed
Library __printi(R1),R3
# Line 32: 
Move str0, R1 # assigning literal to reg
Library __println(R1),R2
# Line 33: 
# new smartMove on: a2_T_17, R1
Move a2_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, a2_T_17 # reversed
Library __printi(R1),R3
# Line 34: 
Move str0, R1 # assigning literal to reg
Library __println(R1),R2
# Line 35: 
# new smartMove on: a3_T_17, R1
Move a3_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, a3_T_17 # reversed
Library __printi(R1),R3
# Line 36: 
Move str0, R1 # assigning literal to reg
Library __println(R1),R2
# Line 37: 
# new smartMove on: a4_T_17, R1
Move a4_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, a4_T_17 # reversed
Library __printi(R1),R3
# Line 38: 
Move str0, R1 # assigning literal to reg
Library __println(R1),R2
# Line 39: 
# new smartMove on: a_T_17, R1
Move a_T_17, R2 # brought to you by safe/smartmove
Move R2, R1 # brought to you by safe/smartmove
Move R2, a_T_17 # reversed
# TMP 3
# new smartMove on: R1, R3
Move R1, R3 # brought to you by safe/smartmove
ArrayLength R3, R3
Library __printi(R3),R4
Library __exit(0),Rdummy
# Method main end
Return 9999

######################
# Error Labels
######################

_null_reference:
Library __println(null_reference),Rdummy
Library __exit(1),Rdummy

_illegal_arr_loc:
Library __println(illegal_arr_loc),Rdummy
Library __exit(1),Rdummy

_dev_by_zero:
Library __println(dev_by_zero),Rdummy
Library __exit(1),Rdummy

_arr_neg_alloc_size:
Library __println(arr_neg_alloc_size),Rdummy
Library __exit(1),Rdummy

