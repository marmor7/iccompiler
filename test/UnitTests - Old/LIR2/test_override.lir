
######################
# Program test_override.ic
######################

######################
# STRING LITERALS
arr_neg_alloc_size: "Negative or zero array size allocation. Program will now exit. "
null_reference: "Null reference. Program will now exit. "
illegal_arr_loc: "Illegal array location. Program will now exit. "
dev_by_zero: "Devision by zero. Program will now exit. "
str0: "A"
str1: "B"
str2: "a is "
str3: "b is "
str4: "o is "
######################

######################
# DISPATCH VECTORS
_DV_B: [_B_foo]
_DV_A: [_A_foo]
######################

_A_foo:   # Method foo:
# Line 3: 
Move str0, R1 # assigning literal to reg
# new smartMove on: R1, R2
Move R1, R2 # brought to you by safe/smartmove
Return R2
Return 9999
_B_foo:   # Method foo:
# Line 9: 
Move str1, R1 # assigning literal to reg
# new smartMove on: R1, R2
Move R1, R2 # brought to you by safe/smartmove
Return R2
Return 9999
_ic_main:   # Main Method
# Line 13: 
Library __allocateObject(4),R1 # Allocation of A
MoveField _DV_A,R1.0 # Move field for DV pointer
# new smartMove on: R1, a_B_20
Move R1, a_B_20 # brought to you by safe/smartmove
# Line 14: 
Library __allocateObject(4),R1 # Allocation of B
MoveField _DV_B,R1.0 # Move field for DV pointer
# new smartMove on: R1, b_B_20
Move R1, b_B_20 # brought to you by safe/smartmove
# Line 15: 
Library __allocateObject(4),R1 # Allocation of B
MoveField _DV_B,R1.0 # Move field for DV pointer
# new smartMove on: R1, o_B_20
Move R1, o_B_20 # brought to you by safe/smartmove
# Line 17: 
Move str2, R1 # assigning literal to reg
# new smartMove on: a_B_20, R3
Move a_B_20, R4 # brought to you by safe/smartmove
Move R4, R3 # brought to you by safe/smartmove
Move R4, a_B_20 # reversed
VirtualCall R3.0(),R3
# new smartMove on: R1, R5
Move R1, R5 # brought to you by safe/smartmove
# new smartMove on: R3, R6
Move R3, R6 # brought to you by safe/smartmove
Library __stringCat(R5,R6),R5
Library __println(R5),R7
# Line 18: 
Move str3, R1 # assigning literal to reg
# new smartMove on: b_B_20, R3
Move b_B_20, R4 # brought to you by safe/smartmove
Move R4, R3 # brought to you by safe/smartmove
Move R4, b_B_20 # reversed
VirtualCall R3.0(),R3
# new smartMove on: R1, R5
Move R1, R5 # brought to you by safe/smartmove
# new smartMove on: R3, R6
Move R3, R6 # brought to you by safe/smartmove
Library __stringCat(R5,R6),R5
Library __println(R5),R7
# Line 19: 
Move str4, R1 # assigning literal to reg
# new smartMove on: o_B_20, R3
Move o_B_20, R4 # brought to you by safe/smartmove
Move R4, R3 # brought to you by safe/smartmove
Move R4, o_B_20 # reversed
VirtualCall R3.0(),R3
# new smartMove on: R1, R5
Move R1, R5 # brought to you by safe/smartmove
# new smartMove on: R3, R6
Move R3, R6 # brought to you by safe/smartmove
Library __stringCat(R5,R6),R5
Library __println(R5),R7
Library __exit(0),Rdummy
# Method main end
Return 9999

######################
# Error Labels
######################

_null_reference:
Library __println(null_reference),Rdummy
Library __exit(1),Rdummy

_illegal_arr_loc:
Library __println(illegal_arr_loc),Rdummy
Library __exit(1),Rdummy

_dev_by_zero:
Library __println(dev_by_zero),Rdummy
Library __exit(1),Rdummy

_arr_neg_alloc_size:
Library __println(arr_neg_alloc_size),Rdummy
Library __exit(1),Rdummy

