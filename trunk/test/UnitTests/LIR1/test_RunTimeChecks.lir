##################################
# String Literals
zero_division_error_str: "Runtime Error: Illegal division by zero!"
array_index_out_of_bounds_str: "Runtime Error: Array index out of bounds!"
array_size_negative_str: "Runtime Error: Array allocation with negative array size!"
null_pointer_dereference_str: "Runtime Error: Null pointer dereference!"
str4: "OK!"
##################################

##################################
# Dispatch Vectors

# 'RunTimeChecks' field offsets: 
_DV_RunTimeChecks : []

# 'A' field offsets: 1:stringField 2:intField 3:b 
_DV_A : [_A_initStringField, _A_getIntField, _A_foo, _A_bar]

# 'B' field offsets: 1:c 
_DV_B : []

# 'C' field offsets: 
_DV_C : []
##################################

_zero_division_error_handler:
Library __println(zero_division_error_str),Rdummy
Library __exit(1),Rdummy

_negative_array_size_handler:
Library __println(array_size_negative_str),Rdummy
Library __exit(1),Rdummy

_null_ptr_dereference_handler:
Library __println(null_pointer_dereference_str),Rdummy
Library __exit(1),Rdummy

_array_index_out_of_bounds_handler:
Library __println(array_index_out_of_bounds_str),Rdummy
Library __exit(1),Rdummy

################# A.foo #################
_A_foo:
Move this,R2
Compare 0,R2
JumpTrue _null_ptr_dereference_handler
MoveField R2.1,R1
Return R1
##################################

################# A.bar #################
_A_bar:
Move this,R2
MoveField R2.2,R1
Return R1
##################################

################# A.initStringField #################
_A_initStringField:
# stringField = val
Move val,R1
Move this,R2
Compare 0,R2
JumpTrue _null_ptr_dereference_handler
MoveField R1,R2.1
Return Rdummy
##################################

################# A.getIntField #################
_A_getIntField:
Move this,R2
Compare 0,R2
JumpTrue _null_ptr_dereference_handler
MoveField R2.2,R1
Return R1
##################################

################# ic.main #################
_ic_main:
Move 100,R1
Compare 0,R1
JumpL _negative_array_size_handler
Mul 4,R1
Library __allocateArray(R1),R1
Move R1,v0arr1
Move 0,R1
Move R1,v1arr2
# arr1[0] = new A()
Library __allocateObject(16),R1
MoveField _DV_A,R1.0
Move v0arr1,R2
Compare 0,R2
JumpTrue _null_ptr_dereference_handler
Move 0,R3
ArrayLength R2,R4
Compare R4,R3
JumpGE _array_index_out_of_bounds_handler
Compare 0,R3
JumpL _array_index_out_of_bounds_handler
MoveArray R1,R2[R3]
# arr1[1] = new A()
Library __allocateObject(16),R1
MoveField _DV_A,R1.0
Move v0arr1,R2
Compare 0,R2
JumpTrue _null_ptr_dereference_handler
Move 1,R3
ArrayLength R2,R4
Compare R4,R3
JumpGE _array_index_out_of_bounds_handler
Compare 0,R3
JumpL _array_index_out_of_bounds_handler
MoveArray R1,R2[R3]
Move v0arr1,R1
Compare 0,R1
JumpTrue _null_ptr_dereference_handler
ArrayLength R1,R1
Move R1,v5l1
Move 1,R1
Neg R1
Move R1,v6n
# arr2 = new IC.AST.PrimitiveType@67386000[10]
Move 10,R1
Compare 0,R1
JumpL _negative_array_size_handler
Mul 4,R1
Library __allocateArray(R1),R1
Move R1,v1arr2
Move 0,R1
Move R1,v8a
# a = new A()
Library __allocateObject(16),R1
MoveField _DV_A,R1.0
Move R1,v8a
Move 10,R1
Move v8a,R3
Compare 0,R3
JumpTrue _null_ptr_dereference_handler
VirtualCall R3.1(),R2
Add R2,R1
Move R1,v11num
Move v8a,R3
Compare 0,R3
JumpTrue _null_ptr_dereference_handler
VirtualCall R3.3(),R1
Move 2,R2
Mul R2,R1
Move R1,v13num2
Move 5,R1
Move 1,R2
Compare 0,R2
JumpTrue _zero_division_error_handler
Div R2,R1
Move R1,v14z
Move str4,R1
Library __println(R1),Rdummy
##################################

