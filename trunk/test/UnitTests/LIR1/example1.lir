##################################
# String Literals
zero_division_error_str: "Runtime Error: Illegal division by zero!"
array_index_out_of_bounds_str: "Runtime Error: Array index out of bounds!"
array_size_negative_str: "Runtime Error: Array allocation with negative array size!"
null_pointer_dereference_str: "Runtime Error: Null pointer dereference!"
str4: "hello"
##################################

##################################
# Dispatch Vectors

# 'A' field offsets: 1:str 2:i 
_DV_A : [_A_vfunc]

# 'B' field offsets: 1:str 2:i 3:j 
_DV_B : [_B_vfunc]

# 'C' field offsets: 
_DV_C : []
##################################

_zero_division_error_handler:
Library __println(zero_division_error_str),Rdummy
Library __exit(1),Rdummy

_negative_array_size_handler:
Library __println(array_size_negative_str),Rdummy
Library __exit(1),Rdummy

_null_ptr_dereference_handler:
Library __println(null_pointer_dereference_str),Rdummy
Library __exit(1),Rdummy

_array_index_out_of_bounds_handler:
Library __println(array_index_out_of_bounds_str),Rdummy
Library __exit(1),Rdummy

################# A.vfunc #################
_A_vfunc:
Move max,R1
Compare 0,R1
JumpL _negative_array_size_handler
Mul 4,R1
Library __allocateArray(R1),R1
Move R1,v6arr
Move 0,R1
Move R1,v7i
_test8:
Move v7i,R2
Move max,R1
Compare R1,R2
JumpL _true_label11
Move 0,R1
Jump _end_lbl10
_true_label11:
Move 1,R1
_end_lbl10:
Compare 0,R1
JumpTrue _end9
# arr[i] = val
Move val,R3
Move v6arr,R4
Compare 0,R4
JumpTrue _null_ptr_dereference_handler
Move v7i,R5
ArrayLength R4,R6
Compare R6,R5
JumpGE _array_index_out_of_bounds_handler
Compare 0,R5
JumpL _array_index_out_of_bounds_handler
MoveArray R3,R4[R5]
# i = i PLUS 1
Move v7i,R1
Move 1,R2
Add R2,R1
Move R1,v7i
Move v7i,R1
Library __printi(R1),Rdummy
Move a,R2
Move 0,R1
Compare R1,R2
JumpTrue _true_label19
Move 0,R1
Jump _end_lbl18
_true_label19:
Move 1,R1
_end_lbl18:
Compare 0,R1
JumpTrue _else20
Jump _end9
_else20:
Jump _test8
_end9:
Return Rdummy
##################################

################# B.vfunc #################
_B_vfunc:
Return Rdummy
##################################

################# A.sfunc #################
_A_sfunc:
Move b,R1
Compare 0,R1
JumpTrue _else0
Move 5,R2
Move R2,v2k
Move 1,R1
Return R1
Jump _end1
_else0:
Library __allocateObject(12),R1
MoveField _DV_A,R1.0
Move R1,v3x
# i = 9
Move 9,R1
Move v3x,R2
Compare 0,R2
JumpTrue _null_ptr_dereference_handler
MoveField R1,R2.2
# str = hello
Move str4,R1
Move v3x,R2
Compare 0,R2
JumpTrue _null_ptr_dereference_handler
MoveField R1,R2.1
Move 0,R1
Return R1
_end1:
##################################

################# ic.main #################
_ic_main:
##################################

